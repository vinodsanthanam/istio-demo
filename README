##Deprecated - Please use the README.md file instead


You would need a hypervisor to work with minikube, install the latest virtualbox 
https://www.virtualbox.org/wiki/Downloads

Before you begin, make sure you start minikube with sufficient memory and cores, otherwise pilot will not be starting
https://istio.io/docs/setup/kubernetes/platform-setup/minikube/

minikube start --memory=8192 --cpus=4
------------------------

Haven't figured out how to set docker context from within Make, hence set the context before you begin
eval $(minikube docker-env)

or use the toggle target in the make file to toggle between GKE and Minikube

------------------------

"brew install watch" before using the makefile

------------------------
If nothing works, remove the minikube folder and restart the steps
rm -rf ~/.minikube

------------------------
Install Istio
------------------------
kubectl apply -f install/kubernetes/helm/istio/templates/crds.yaml
kubectl apply -f install/kubernetes/istio-demo-auth.yaml

------------------------
Remove Istio
------------------------
kubectl delete -f install/kubernetes/istio-demo-auth.yaml
kubectl delete -f install/kubernetes/helm/istio/templates/crds.yaml -n istio-system

------------------------
View Istio log
------------------------
telemetry - kubectl -n istio-system logs $(kubectl -n istio-system get pod -l app=telemetry -o jsonpath='{.items[0].metadata.name}') -c mixer
ingress gateway - kubectl -n istio-system logs $(kubectl -n istio-system get pod -l app=istio-ingressgateway -o jsonpath='{.items[0].metadata.name}') -c istio-proxy
pilot - kubectl -n istio-system logs $(kubectl -n istio-system get pod -l app=pilot -o jsonpath='{.items[0].metadata.name}') -c istio-proxy

Troubleshooting guide for Istio
------------------------
https://istio.io/help/ops/

open telemetry endpoint
------------------------
http://localhost:9093/metrics

open grafana endpoint
------------------------
http://localhost:9092/d/1/istio-mesh-dashboard?refresh=5s&orgId=1

open prometheus endpoint
------------------------
http://localhost:9090/graph?g0.range_input=1h&g0.expr=grpc_server_handled_total&g0.tab=1

target - http://localhost:9090/targets
config - http://localhost:9090/config

open jaeger dashboard
------------------------
http://localhost:16686

open service graph endpoint
------------------------
http://localhost:8088/dotgraph
http://localhost:8088/force/forcegraph.html


Example Autoscaling
------------------------
kubectl autoscale deployment service-a-prod --cpu-percent=50 --min=5 --max=10
